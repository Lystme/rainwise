services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: rainwise
    volumes:
      - pgdata:/var/lib/postgresql/data   # named volume = durable DB files
    ports:
      - "5432:5432"   # host:container

  airflow-web:
    build:
      context: .    # look in repo root for Dockerfile paths
      dockerfile: docker/airflow.Dockerfile
    depends_on: [postgres]    # wait until DB container is healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/rainwise
      AIRFLOW__WEBSERVER__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY}
      OWM_API_KEY: ${OWM_API_KEY}          # pulled from .env
    volumes:
      - ./dags:/opt/airflow/dags           # hot-reload DAGs
      - ./data:/opt/airflow/data           # share raw files
      - airflow-logs:/opt/airflow/logs
    ports:
      - "8080:8080"   # Airflow UI
    # Run migrations, create user/connection once, then start webserver
    command: >
      bash -c "
      airflow db migrate &&
      airflow users list | grep -q '^admin ' ||
        airflow users create --username admin --password admin --firstname Gabriel --lastname RainWise --role Admin --email you@example.com &&
      airflow connections get 'postgres_rainwise' >/dev/null 2>&1 ||
        airflow connections add 'postgres_rainwise' --conn-uri 'postgresql://airflow:airflow@postgres:5432/rainwise' &&
      airflow webserver"

  airflow-scheduler:
    build:
      context: .
      dockerfile: docker/airflow.Dockerfile
    depends_on: [postgres, airflow-web]
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/rainwise
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY}
      OWM_API_KEY: ${OWM_API_KEY}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - airflow-logs:/opt/airflow/logs
    command: airflow scheduler

  streamlit:
    build:
      context: .
      dockerfile: docker/streamlit.Dockerfile
    depends_on: [postgres]
    volumes:
      - ./streamlit_app:/app    # auto-reload when app.py is edited
    ports:
      - "8501:8501"

volumes:
  pgdata:         # named volume lives under Docker Desktop VM
  airflow-logs:   # named volume for logs